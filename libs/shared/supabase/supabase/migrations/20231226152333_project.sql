create table "public"."projects" (
  "id" bigint generated by default as identity not null,
  "created_at" timestamp with time zone not null default now(),
  "updated_at" timestamp with time zone default now(),
  "name" character varying,
  "description" text,
  "start_date" timestamp with time zone,
  "end_date" timestamp with time zone,
  "status" character varying default 'PLAN' :: character varying,
  "priority" smallint
);

CREATE UNIQUE INDEX projects_pkey ON public.projects USING btree (id);

alter table "public"."projects" add constraint "projects_pkey" PRIMARY KEY using index "projects_pkey";

alter table "public"."projects" enable row level security;

grant delete on table "public"."projects" to "anon";
grant insert on table "public"."projects" to "anon";
grant references on table "public"."projects" to "anon";
grant select on table "public"."projects" to "anon";
grant trigger on table "public"."projects" to "anon";
grant truncate on table "public"."projects" to "anon";
grant update on table "public"."projects" to "anon";

grant delete on table "public"."projects" to "authenticated";
grant insert on table "public"."projects" to "authenticated";
grant references on table "public"."projects" to "authenticated";
grant select on table "public"."projects" to "authenticated";
grant trigger on table "public"."projects" to "authenticated";
grant truncate on table "public"."projects" to "authenticated";
grant update on table "public"."projects" to "authenticated";

grant delete on table "public"."projects" to "service_role";
grant insert on table "public"."projects" to "service_role";
grant references on table "public"."projects" to "service_role";
grant select on table "public"."projects" to "service_role";
grant trigger on table "public"."projects" to "service_role";
grant truncate on table "public"."projects" to "service_role";
grant update on table "public"."projects" to "service_role";

create trigger handle_updated_at before update on "public"."projects" for each row execute procedure moddatetime (updated_at);
